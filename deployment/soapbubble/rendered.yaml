apiVersion: v1
kind: Service
metadata:
  labels:
    app: bot
    app.kubernetes.io/managed-by: skaffold-v1.10.1
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kustomize
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: 5d632f25-9bac-4cc7-9bf3-6949d74be773
    skaffold.dev/tag-policy: git-commit
  name: bot
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: bot
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: bot-admin
    app.kubernetes.io/managed-by: skaffold-v1.10.1
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kustomize
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: 5d632f25-9bac-4cc7-9bf3-6949d74be773
    skaffold.dev/tag-policy: git-commit
  name: bot-admin
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: bot-admin
  sessionAffinity: None
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.10.1
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kustomize
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: 5d632f25-9bac-4cc7-9bf3-6949d74be773
    skaffold.dev/tag-policy: git-commit
  name: bot
spec:
  selector:
    matchLabels:
      app: bot
  template:
    metadata:
      labels:
        app: bot
        app.kubernetes.io/managed-by: skaffold-v1.10.1
        skaffold.dev/builder: local
        skaffold.dev/cleanup: "true"
        skaffold.dev/deployer: kustomize
        skaffold.dev/docker-api-version: "1.40"
        skaffold.dev/run-id: 5d632f25-9bac-4cc7-9bf3-6949d74be773
        skaffold.dev/tag-policy: git-commit
    spec:
      containers:
      - env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /opt/secrets/service-account.json
        - name: BOT_ORIGIN
          value: '*'
        - name: BOT_PROFILE_ID
          valueFrom:
            configMapKeyRef:
              key: BOT_PROFILE_ID
              name: bot-secrets
        - name: BOT_DISCORD_TOKEN
          valueFrom:
            configMapKeyRef:
              key: token
              name: discord-secrets
        - name: BOT_TWITCH_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              key: client
              name: twitch-secrets
        - name: BOT_TWITCH_CLIENT_SECRET
          valueFrom:
            configMapKeyRef:
              key: secret
              name: twitch-secrets
        - name: BOT_TWITCH_WEBHOOK
          valueFrom:
            configMapKeyRef:
              key: BOT_TWITCH_WEBHOOK
              name: bot-secrets
        - name: BOT_TWITCH_SECRET
          valueFrom:
            configMapKeyRef:
              key: secret
              name: twitch-secrets
        - name: BOT_PORT
          value: "80"
        image: soapbubble/bot:v1.13.0-96-g0f3abdc-dirty@sha256:85dbd0db0593c0e841fabc59f58d0217a1eb040668f4c97a0960dd0b965f67e5
        name: bot
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /opt/secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          items:
          - key: service.json
            path: service-account.json
          secretName: google-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.10.1
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kustomize
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: 5d632f25-9bac-4cc7-9bf3-6949d74be773
    skaffold.dev/tag-policy: git-commit
  name: bot-admin
spec:
  selector:
    matchLabels:
      app: bot-admin
  template:
    metadata:
      labels:
        app: bot-admin
        app.kubernetes.io/managed-by: skaffold-v1.10.1
        skaffold.dev/builder: local
        skaffold.dev/cleanup: "true"
        skaffold.dev/deployer: kustomize
        skaffold.dev/docker-api-version: "1.40"
        skaffold.dev/run-id: 5d632f25-9bac-4cc7-9bf3-6949d74be773
        skaffold.dev/tag-policy: git-commit
    spec:
      containers:
      - env:
        - name: PORT
          value: "80"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /opt/secrets/service-account.json
        - name: BOT_ADMIN_SOCKETIO
          value: ws://192.168.99.100/bot/
        - name: BOT_ADMIN_TWITCH_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              key: client
              name: twitch-secrets
        - name: BOT_ADMIN_TWITCH_SECRET
          valueFrom:
            configMapKeyRef:
              key: secret
              name: twitch-secrets
        - name: BOT_ADMIN_TWITCH_REDIRECT
          valueFrom:
            configMapKeyRef:
              key: redirect
              name: twitch-secrets
        image: soapbubble/bot-admin:v1.13.0-96-g0f3abdc@sha256:1824dac07088e711523d59b00d660bdb6481bb04e3f84ca05b9a39d79e3cce14
        name: bot-admin
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /opt/secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          items:
          - key: service.json
            path: service-account.json
          secretName: google-secrets
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    rancher.io/globalDNS.hostname: twitch.soapbubble.online
  labels:
    app.kubernetes.io/managed-by: skaffold-v1.10.1
    skaffold.dev/builder: local
    skaffold.dev/cleanup: "true"
    skaffold.dev/deployer: kustomize
    skaffold.dev/docker-api-version: "1.40"
    skaffold.dev/run-id: 5d632f25-9bac-4cc7-9bf3-6949d74be773
    skaffold.dev/tag-policy: git-commit
  name: ingress-service
spec:
  rules:
  - host: twitch.soapbubble.online
    http:
      paths:
      - backend:
          serviceName: bot
          servicePort: 80
        path: /socket.io
      - backend:
          serviceName: bot
          servicePort: 80
        path: /bot
      - backend:
          serviceName: bot-admin
          servicePort: 80
        path: /
