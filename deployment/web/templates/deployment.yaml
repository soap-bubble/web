apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "web.authFullname" . }}
  labels:
{{ include "web.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: auth
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: auth
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: auth-{{ .Chart.Name }}
          image: "{{ .Values.soapbubble.auth.image }}:{{ .Values.soapbubble.auth.tag }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
            - name: AUTH_PORT
              value: "80"
            - name: AUTH_ROOT_PATH
              value: "/auth"
            - name: AUTH_MONGODB_URI
              value: "{{ .Values.soapbubble.auth.mongoDbUri }}"
            - name: MONGODB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap }}
                  key: auth-mongodb-username
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets }}
                  key: auth-mongodb-password
            - name: AUTH_GOOGLE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets }}
                  key: auth-google-secret
            - name: AUTH_SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets }}
                  key: auth-session-secret
            - name: AUTH_GOOGLE_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap }}
                  key: auth-google-client-id
            - name: AUTH_CORS_ORIGIN
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap }}
                  key: auth-google-cors-url
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.soapbubble.auth.healthcheck }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.soapbubble.auth.healthcheck }}
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "web.coreFullname" . }}
  labels:
{{ include "web.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: core
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: core
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: core-{{ .Chart.Name }}
          image: "{{ .Values.soapbubble.core.image }}:{{ .Values.soapbubble.core.tag }}"
          env:
            - name: CORE_PORT
              value: "80"
            - name: CORE_FB_APP_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap }}
                  key: core-fb-app-id
            - name: CORE_GOOGLE_ANALYTICS_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap }}
                  key: core-google-analytics-id
            - name: CORE_CONTENTFUL_SPACE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap }}
                  key: core-contentful-space
            - name: CORE_CONTENTFUL_ACCESS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets }}
                  key: core-contentful-access
          imagePullPolicy: {{ .Values.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.soapbubble.core.healthcheck }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.soapbubble.core.healthcheck }}
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "web.morpheusFullname" . }}
  labels:
{{ include "web.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: morpheus
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: morpheus
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: morpheus-{{ .Chart.Name }}
          image: "{{ .Values.soapbubble.morpheus.image }}:{{ .Values.soapbubble.morpheus.tag }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
            - name: MORPHEUS_PORT
              value: "80"
            - name: MORPHEUS_PRIME_DB
              value: "true"
            - name: MORPHEUS_UPDATE_DB
              value: "true"
            - name: MORPHEUS_ROOT_PATH
              value: "/morpheus"
            - name: MORPHEUS_MONGODB_URI
              value: "{{ .Values.soapbubble.morpheus.mongoDbUri }}"
            - name: MORPHEUS_GOOGLE_ANALYTICS_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap }}
                  key: morpheus-google-analytics-id
            - name: MONGODB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap }}
                  key: morpheus-mongodb-username
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets }}
                  key: morpheus-mongodb-password
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.soapbubble.morpheus.healthcheck }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.soapbubble.morpheus.healthcheck }}
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
