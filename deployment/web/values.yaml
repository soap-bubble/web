# Requires a configMap with the following values:
# auth-google-callack-url       Google auth callback URL for the client ID and secret
# auth-google-client-id         Google auth client ID
# auth-google-cors-url		      Probably going to go away, but allow access to auth from these domains (JSON array)
# auth-mongodb-username         MongoDB username for auth service
# core-contentful-space         Contentful space for blog
# core-fb-app-id                FB app ID for main website
# core-google-analytics-id	    Google analytics ID for main website
# morpheus-google-analytics-id  Google analytics ID for game
# morpheus-mongodb-username		  MongoDB username for game

# Requires the following secrets
# auth-google-secret            Google auth secret
# auth-mongodb-password         Password for auth database
# auth-session-secret           Session secret for backend
# core-contentful-access        Contentful access key for blog
# morpheus-mongodb-password     Password for game database

replicaCount: 1

pullPolicy: IfNotPresent

configMap: soapbubble-web
secrets: soapbubble-web

soapbubble:
  core:
    image: docker.soapbubble.online/soapbubble/core
    tag: latest
    healthcheck: "/"
  auth:
    image: docker.soapbubble.online/soapbubble/auth
    tag: latest
    mongoDbUri: "mongodb://mongodb:27017/auth"
    healthcheck: "/healthcheck"
  morpheus:
    image: docker.soapbubble.online/soapbubble/morpheus
    tag: latest
    mongoDbUri: "mongodb://mongodb:27017/morpheus"
    healthcheck: "/morpheus"
  proxy:
    image: docker.soapbubble.online/soapbubble/proxy
    tag: latest
    healthcheck: "/"
    healthcheckPort: 8888

imagePullSecrets:
  - name: soapbubble
nameOverride: ""
fullnameOverride: ""

# letsencrypt:
#   enabled: true
#   # Resource name of the letsencrypt cert
#   certificate: soapbubble-online-crt
#   # Where the cert secret is stored (should match ingress.tls[].secretName)
#   tlsSecretName: soapbubble-online-tls
#   # Host for the cert (should match ingress.tls[].hosts[0])
#   host: soapbubble.online

service:
  type: NodePort
  port: 80

ingress:
  enabled: true
  tls: true
  annotations:
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/acme-challenge-type: "dns01"
    certmanager.k8s.io/acme-dns01-provider: "soapbubble-online-route53"
    certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"
  host: soapbubble.online
  secretName: soapbubble-online-tls

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}
